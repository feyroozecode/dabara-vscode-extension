{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Dabara",
  "scopeName": "source.dabara",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#booleans"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.dabara",
          "match": "\\b(fara|ƙare|idan|sauran|maimaita|gama|komawa)\\b"
        },
        {
          "name": "keyword.declaration.dabara", 
          "match": "\\b(naɗa|aiki)\\b"
        },
        {
          "name": "keyword.other.dabara",
          "match": "\\b(rubuta|karɓa)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.dabara",
          "match": "\\b(ƙara|rage|ninka|raba)\\b"
        },
        {
          "name": "keyword.operator.comparison.dabara",
          "match": "\\b(daidai|bamban|babba|ƙarami|babban_ko_daidai|ƙaramin_ko_daidai)\\b"
        },
        {
          "name": "keyword.operator.logical.dabara",
          "match": "\\b(kuma|ko|ba)\\b"
        },
        {
          "name": "keyword.operator.assignment.dabara",
          "match": "="
        },
        {
          "name": "keyword.operator.dabara",
          "match": "\\+|\\-|\\*|/|%"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.dabara",
          "match": "\\b(gaskiya|karya)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.dabara",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.dabara",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.dabara",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.dabara",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.dabara",
          "match": "//.*$"
        },
        {
          "name": "comment.block.dabara",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.dabara",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
          "name": "constant.numeric.hex.dabara",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.dabara",
          "match": "\\b[a-zA-ZɓɗƘƙƴʔ_][a-zA-ZɓɗƘƙƴʔ0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.dabara",
          "match": "\\b[a-zA-ZɓɗƘƙƴʔ_][a-zA-ZɓɗƘƙƴʔ0-9_]*\\b"
        }
      ]
    }
  }
}